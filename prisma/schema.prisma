// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Shop {
  id          String   @id
  name        String
  accessToken String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  bundles     Bundle[]
}

model Bundle {
  id                Int      @id @default(autoincrement())
  title             String
  description       String?
  imageUrl          String? // URL of selected image
  imageAlt          String? // Alt text for accessibility
  imageSource       String? // "product", "collection", "file"
  sourceId          String? // ID of source (product/collection ID)
  originalPrice     Float
  discountedPrice   Float
  savingsAmount     Float    @default(0)
  savingsPercentage Int      @default(0) // Store as integer (e.g., 25 for 25%)
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  shopId         String
  shop           Shop            @relation(fields: [shopId], references: [id])
  bundleProducts BundleProduct[]
  targetProduct  TargetProduct? // One-to-one relation
}

model TargetProduct {
  id               Int      @id @default(autoincrement())
  productId        String // Shopify product ID
  productHandle    String // Shopify product handle
  productVariantId String // Shopify variant ID
  productTitle     String?
  productImage     String?
  productAlt       String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relation back to Bundle
  bundleId Int    @unique
  bundle   Bundle @relation(fields: [bundleId], references: [id], onDelete: Cascade)
}

model BundleProduct {
  id        Int      @id @default(autoincrement())
  bundleId  Int // Changed from String to Int to match Bundle.id
  bundle    Bundle   @relation(fields: [bundleId], references: [id])
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([bundleId, productId])
  @@index([bundleId])
  @@index([productId])
}
